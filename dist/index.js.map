{"version":3,"sources":["../src/index.tsx","../src/components/checkout/index.tsx","../src/components/loader/index.tsx"],"sourcesContent":["export * from \"./components/checkout\";\n","import React, { Fragment, useState } from \"react\";\nimport { Country, State } from \"country-state-city\";\nimport { FormLoader, LoaderGrowing } from \"../loader\";\nimport { useForm } from \"react-hook-form\";\nimport Image from \"next/image\";\n\n// user data interface\ninterface userDataInterface {\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  address: string;\n  city: string;\n  state: string;\n  postcode: string;\n  country: string;\n  company: string;\n}\n\n// cart data interface array of object\ninterface cartDataInterface {\n  id: number;\n  title: string;\n  totals: {\n    total: number;\n  };\n  featured_image: string;\n}\n\n// summery data interface\ninterface summeryDataInterface {\n  total: number;\n  subtotal: number;\n  discount: number;\n}\n\n// policy data interface\ninterface policyDataInterface {\n  title: string;\n  description: string;\n  link: {\n    title: string;\n    url: string;\n    target: string;\n  };\n}\n\n// sign up data interface\ninterface signUpDataInterface {\n  title: string;\n}\n\n// company policy data interface\ninterface companyPolicyDataInterface {\n  title: string;\n  companyName: string;\n  link: {\n    title: string;\n    url: string;\n    target: string;\n  };\n}\n\n// check out component props\ninterface CheckOutProps {\n  loading?: boolean;\n  userData?: userDataInterface;\n  formSubmit?: (data: any) => void;\n  autoFill?: boolean;\n  cartData?: cartDataInterface[];\n  summeryData?: summeryDataInterface;\n  policyData?: policyDataInterface;\n  signUpData?: signUpDataInterface;\n  companyPolicyData?: companyPolicyDataInterface;\n  userLogin?: boolean;\n}\n\nexport const CheckOut = ({\n  loading,\n  userData,\n  formSubmit,\n  autoFill,\n  cartData,\n  summeryData,\n  policyData,\n  signUpData,\n  companyPolicyData,\n  userLogin,\n}: CheckOutProps) => {\n  const [country, setCountry] = useState(Country.getAllCountries());\n  const [state, setState] = useState(State.getAllStates());\n  const [loader, setLoader] = useState<boolean>(false);\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors, isValid },\n  } = useForm({\n    mode: \"onBlur\",\n  });\n\n  /* -------------------------------------------------------------------------- */\n  /*                          if cartData is not passed                         */\n  /* -------------------------------------------------------------------------- */\n  if (!cartData) {\n    cartData = [];\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                        if summeryData is not passed                        */\n  /* -------------------------------------------------------------------------- */\n  if (!summeryData) {\n    summeryData = {\n      total: 0,\n      subtotal: 0,\n      discount: 0,\n    };\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                         if policyData is not passed                        */\n  /* -------------------------------------------------------------------------- */\n  if (!policyData) {\n    policyData = {\n      title: \"\",\n      description: \"\",\n      link: {\n        title: \"\",\n        url: \"\",\n        target: \"\",\n      },\n    };\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                         if signUpData is not passed                        */\n  /* -------------------------------------------------------------------------- */\n  if (!signUpData) {\n    signUpData = {\n      title: \"\",\n    };\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                     if companyPolicyData is not passed                     */\n  /* -------------------------------------------------------------------------- */\n  if (!companyPolicyData) {\n    companyPolicyData = {\n      title: \"\",\n      companyName: \"\",\n      link: {\n        title: \"\",\n        url: \"\",\n        target: \"\",\n      },\n    };\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*      if autoFill is true then auto fill the form using useEffect hook      */\n  /* -------------------------------------------------------------------------- */\n  React.useEffect(() => {\n    if (autoFill && userData) {\n      // react hook form setValue\n      Object.keys(userData).forEach((key) => {\n        // @ts-ignore\n        setValue(key, userData[key]);\n      });\n    }\n    // if userLogin is true then auto fill the form using useEffect hook\n    if (!userLogin) {\n      // accountPolicy setValues using react hook form setValue\n      setValue(\"accountPolicy\", true);\n    } else {\n      // accountPolicy setValues using react hook form setValue\n      setValue(\"accountPolicy\", false);\n    }\n  }, [autoFill, userData, userLogin]);\n\n  /* -------------------------------------------------------------------------- */\n  /*                             form submit handler                            */\n  /* -------------------------------------------------------------------------- */\n  const onSubmit = async (data: any) => {\n    /* -------------------------- form loader on submit ------------------------- */\n    setLoader(true);\n    /* ---------------------------- form data console --------------------------- */\n    if (formSubmit) {\n      formSubmit(data);\n    }\n    /* -------------------------- form loader on submit ------------------------- */\n    setLoader(false);\n  };\n\n  return (\n    <div className=\"container mx-auto\">\n      <div className=\"lg:flex grid gap-10 mt-16 mb-28\">\n        {/* Form Body */}\n        <div className=\"2xl:w-3/4 lg:w-2/3 w-11/12 mx-auto \">\n          <div className=\"bg-white shadow-md rounded-xl overflow-hidden p-6\">\n            <div className=\" grid lg:gap-3 gap-8\">\n              {/* Form Title */}\n              <div className=\"flex p-2.5 bg-themeLightGray rounded font-medium text-xl text-themeDark mb-6\">\n                <h3 className=\"w-full md:w-4/12 sm:w-5/12 ml-2\">Billing Details</h3>\n              </div>\n              {/* Form input lists */}\n              {cartData && cartData.length > 0 && (\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <div className=\"w-full grid gap-8\">\n                    {/* First Name & Last Name */}\n                    <div className=\"sm:flex grid sm:gap-5 gap-8\">\n                      {/* First Name */}\n                      <div className=\"sm:w-1/2 w-full\">\n                        <div className=\"relative\">\n                          <label\n                            className={`absolute -top-2 ${\n                              errors.first_name ? \"text-red-400\" : \"text-[#85929E]\"\n                            } left-3 bg-white text-xs`}\n                            htmlFor=\"first_name\"\n                          >\n                            First Name\n                          </label>\n                          <input\n                            className={`appearance-none border rounded-md w-full py-3.5 px-5 ${\n                              errors.first_name ? \"border-red-400\" : \"border-[#DDE6F5]\"\n                            } text-gray-700 leading-tight focus:outline-none focus:shadow-lg focus:shadow-outline`}\n                            type=\"text\"\n                            placeholder=\"First Name\"\n                            id=\"first_name\"\n                            {...register(\"first_name\", {\n                              required: \"First Name is required\",\n                            })}\n                          />\n                        </div>\n                      </div>\n                      {/* Last Name */}\n                      <div className=\"sm:w-1/2 w-full\">\n                        <div className=\"relative\">\n                          <label\n                            className={`absolute -top-2 ${\n                              errors.last_name ? \"text-red-400\" : \"text-[#85929E]\"\n                            } left-3 bg-white text-xs`}\n                            htmlFor=\"last_name\"\n                          >\n                            Last Name\n                          </label>\n                          <input\n                            className={`appearance-none border rounded-md w-full py-3.5 px-5 text-gray-700 leading-tight focus:outline-none focus:shadow-lg focus:shadow-outline ${\n                              errors.last_name ? \"border-red-400\" : \"border-[#DDE6F5]\"\n                            }`}\n                            type=\"text\"\n                            placeholder=\"Last Name\"\n                            id=\"last_name\"\n                            {...register(\"last_name\", {\n                              required: \"Last Name is required\",\n                            })}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    {/* company name & country */}\n                    <div className=\"sm:flex grid sm:gap-5 gap-8\">\n                      {/* Company name */}\n                      <div className=\"sm:w-1/2 w-full\">\n                        <div className=\"relative\">\n                          <label className=\"absolute -top-2 text-[#85929E] left-3 bg-white text-xs\" htmlFor=\"company\">\n                            Company Name (Optional)\n                          </label>\n                          <input\n                            className=\"appearance-none border rounded-md w-full py-3.5 px-5 text-gray-700 border-[#DDE6F5] leading-tight focus:outline-none focus:shadow-lg focus:shadow-outline\"\n                            type=\"text\"\n                            placeholder=\"Company Name\"\n                            id=\"company\"\n                            {...register(\"company\")}\n                          />\n                        </div>\n                      </div>\n                      {/* Country / Region */}\n                      <div className=\"sm:w-1/2 w-full\">\n                        <div className=\"relative\">\n                          <label\n                            className={`absolute -top-2 ${\n                              errors.country ? \"text-red-400\" : \"text-[#85929E]\"\n                            } left-3 bg-white text-xs`}\n                            htmlFor=\"country\"\n                          >\n                            Country / Region\n                          </label>\n                          <select\n                            title=\"Country\"\n                            className={`appearance-none border rounded-md w-full py-3.5 px-5 text-gray-700 leading-tight focus:outline-none focus:shadow-lg focus:shadow-outline ${\n                              errors.country ? \"border-red-400\" : \"border-[#DDE6F5]\"\n                            }`}\n                            id=\"country\"\n                            {...register(\"country\", {\n                              required: \"Country is required\",\n                            })}\n                          >\n                            <option value=\"\">Select Country</option>\n                            {country.map((item, index) => (\n                              <option key={index} value={item.isoCode}>\n                                {item.flag} {item.name}\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Street address */}\n                    <div className=\"sm:flex grid sm:gap-5 gap-8\">\n                      <div className=\"w-full\">\n                        <div className=\"relative\">\n                          <label\n                            className={`absolute -top-2 ${\n                              errors.address_1 ? \"text-red-400\" : \"text-[#85929E]\"\n                            } left-3 bg-white text-xs`}\n                            htmlFor=\"address_1\"\n                          >\n                            Street Address\n                          </label>\n                          <input\n                            className={`appearance-none border rounded-md w-full py-3.5 px-5 text-gray-700 leading-tight focus:outline-none focus:shadow-lg focus:shadow-outline ${\n                              errors.address_1 ? \"border-red-400\" : \"border-[#DDE6F5]\"\n                            }`}\n                            type=\"text\"\n                            placeholder=\"Address\"\n                            id=\"address_1\"\n                            {...register(\"address_1\", {\n                              required: \"Address is required\",\n                            })}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    {/* Town / City & District */}\n                    <div className=\"sm:flex grid sm:gap-5 gap-8\">\n                      {/* Town / City */}\n                      <div className=\"sm:w-1/2 w-full\">\n                        <div className=\"relative\">\n                          <label\n                            className={`absolute -top-2 ${\n                              errors.city ? \"text-red-400\" : \"text-[#85929E]\"\n                            } left-3 bg-white text-xs`}\n                            htmlFor=\"city\"\n                          >\n                            Your Town / City\n                          </label>\n                          <input\n                            className={`appearance-none border rounded-md w-full py-3.5 px-5 text-gray-700 leading-tight focus:outline-none focus:shadow-lg focus:shadow-outline ${\n                              errors.city ? \"border-red-400\" : \"border-[#DDE6F5]\"\n                            }`}\n                            type=\"text\"\n                            placeholder=\"City\"\n                            id=\"city\"\n                            {...register(\"city\", {\n                              required: \"City is required\",\n                            })}\n                          />\n                        </div>\n                      </div>\n                      {/* State */}\n                      <div className=\"sm:w-1/2 w-full\">\n                        <div className=\"relative\">\n                          <label\n                            className={`absolute -top-2 ${\n                              errors.state ? \"text-red-400\" : \"text-[#85929E]\"\n                            } left-3 bg-white text-xs`}\n                            htmlFor=\"state\"\n                          >\n                            Your State\n                          </label>\n                          <select\n                            title=\"state\"\n                            className={`appearance-none border rounded-md w-full py-3.5 px-5 text-gray-700 border-[#DDE6F5] leading-tight focus:outline-none focus:shadow-lg focus:shadow-outline ${\n                              errors.state ? \"border-red-400\" : \"border-[#DDE6F5]\"\n                            }`}\n                            id=\"state\"\n                            {...register(\"state\", {\n                              required: \"State is required\",\n                            })}\n                          >\n                            <option value=\"\">Select State</option>\n                            {state.map((item: any, index: any) => (\n                              <option key={index} value={item.value}>\n                                {item.name}\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Postcode / ZIP & Phone */}\n                    <div className=\"sm:flex grid sm:gap-5 gap-8\">\n                      {/* Postcode / ZIP */}\n                      <div className=\"sm:w-1/2 w-full\">\n                        <div className=\"relative\">\n                          <label\n                            className={`absolute -top-2 ${\n                              errors.postcode ? \"text-red-400\" : \"text-[#85929E]\"\n                            } left-3 bg-white text-xs`}\n                            htmlFor=\"postcode\"\n                          >\n                            Postcode / ZIP\n                          </label>\n                          <input\n                            className={`appearance-none border rounded-md w-full py-3.5 px-5 text-gray-700 leading-tight focus:outline-none focus:shadow-lg focus:shadow-outline ${\n                              errors.postcode ? \"border-red-400\" : \"border-[#DDE6F5]\"\n                            }`}\n                            type=\"text\"\n                            placeholder=\"Your Postcode / ZIP\"\n                            id=\"postcode\"\n                            {...register(\"postcode\", {\n                              required: \"Postcode is required\",\n                            })}\n                          />\n                        </div>\n                      </div>\n                      {/* Phone */}\n                      <div className=\"sm:w-1/2 w-full\">\n                        <div className=\"relative\">\n                          <label\n                            className={`absolute -top-2 ${\n                              errors.phone ? \"text-red-400\" : \"text-[#85929E]\"\n                            } left-3 bg-white text-xs`}\n                            htmlFor=\"phone\"\n                          >\n                            Phone\n                          </label>\n                          <input\n                            className={`appearance-none border rounded-md w-full py-3.5 px-5 text-gray-700 border-[#DDE6F5] leading-tight focus:outline-none focus:shadow-lg focus:shadow-outline ${\n                              errors.phone ? \"border-red-400\" : \"border-[#DDE6F5]\"\n                            }`}\n                            type=\"tel\"\n                            placeholder=\"Your Phone\"\n                            id=\"phone\"\n                            {...register(\"phone\", {\n                              required: \"Phone is required\",\n                            })}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    {/* Email address */}\n                    <div className=\"sm:flex grid sm:gap-5 gap-8\">\n                      <div className=\"w-full\">\n                        <div className=\"relative\">\n                          <label\n                            className={`absolute -top-2 ${\n                              errors.email ? \"text-red-400\" : \"text-[#85929E]\"\n                            } left-3 bg-white text-xs`}\n                            htmlFor=\"email\"\n                          >\n                            Email Address\n                          </label>\n                          <input\n                            className={`appearance-none border rounded-md w-full py-3.5 px-5 text-gray-700 leading-tight focus:outline-none focus:shadow-lg focus:shadow-outline ${\n                              errors.email ? \"border-red-400\" : \"border-[#DDE6F5]\"\n                            }`}\n                            type=\"email\"\n                            placeholder=\"Your Email Address\"\n                            id=\"email\"\n                            {...register(\"email\", {\n                              required: \"Email is required\",\n                              pattern: {\n                                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                                message: \"invalid email address\",\n                              },\n                            })}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    {/* Account Policy checkbox */}\n                    {!userLogin && (\n                      <div className=\"sm:flex grid sm:gap-5 gap-8\">\n                        <div className=\"w-full\">\n                          <div className=\"relative\">\n                            <div\n                              className={`border rounded-md w-full flex gap-3 py-3.5 px-5 ${\n                                errors.accountPolicy\n                                  ? \"text-redLight border-redLight\"\n                                  : \"border-[#DDE6F5] text-[#85929E]\"\n                              } leading-tight`}\n                            >\n                              <input\n                                type=\"checkbox\"\n                                {...register(\"accountPolicy\", {\n                                  required: \"Account Policy is required\",\n                                })}\n                                defaultChecked={!userLogin}\n                                id=\"accountPolicy\"\n                                className=\"flex-none form-check-input h-4 w-4 mt-1 border border-gray-300 rounded-sm bg-white checked:bg-blueTwo checked:border-blueTwo focus:outline-none transition duration-200 align-top bg-no-repeat bg-center bg-contain float-left cursor-pointer group\"\n                              />\n                              <label htmlFor=\"accountPolicy\">\n                                You are not logged in. We will automatically create a new account with your email\n                                address. We will send you an email with your account details. If you already have an\n                                account, please log in.\n                              </label>\n                            </div>\n                            <label\n                              className={`absolute -top-2 ${\n                                errors.accountPolicy ? \"text-redLight\" : \"text-[#85929E]\"\n                              } left-3 bg-white text-xs`}\n                            >\n                              Account Policy\n                            </label>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                  <div>\n                    {/* Order Button */}\n                    <button\n                      id=\"buy-button\"\n                      type=\"submit\"\n                      className={`${\n                        isValid\n                          ? loader\n                            ? \"bg-gray-800 shadow-md text-white cursor-not-allowed\"\n                            : \"bg-orangeTwo shadow-4xl text-white hover:opacity-70 cursor-pointer\"\n                          : \"bg-orangeTwo text-white cursor-not-allowed opacity-50\"\n                      } transition-all duration-300 ease-in-out flex justify-center items-center gap-4 rounded-md text-base font-semibold font-Roboto capitalize py-4 px-7 mt-6`}\n                      disabled={!isValid || loader}\n                    >\n                      {loader ? \"Processing...\" : \"Place Order\"}\n                      {loader && <FormLoader color=\"text-white\" />}\n                    </button>\n                    {/* Add a image  */}\n                    <div className=\"flex justify-center mt-6 w-1/3\">\n                      <Image\n                        src=\"/2checkout_logo.png\"\n                        alt=\"payment icon\"\n                        width=\"300\"\n                        height=\"100\"\n                        priority\n                        placeholder=\"blur\"\n                        blurDataURL=\"/2checkout_logo.png\"\n                      />\n                    </div>\n                    {/* Return to cart */}\n                    <div className=\"flex justify-between mt-6\">\n                      <a\n                        href=\"/cart\"\n                        className=\"flex items-center font-semibold text-themeNevyLight hover:text-themeRedLight text-base transition hover:duration-300 group\"\n                      >\n                        <svg\n                          className=\"mr-2.5 fill-themeNevyLight group-hover:fill-themeRedLight transition hover:duration-300\"\n                          width=\"16\"\n                          height=\"10\"\n                          viewBox=\"0 0 16 10\"\n                          fill=\"none\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            clipRule=\"evenodd\"\n                            d=\"M5.70711 9.70711C5.31658 10.0976 4.68342 10.0976 4.29289 9.70711L0.292892 5.70711C-0.097633 5.31658 -0.0976329 4.68342 0.292892 4.29289L4.29289 0.292892C4.68342 -0.0976324 5.31658 -0.0976324 5.70711 0.292893C6.09763 0.683416 6.09763 1.31658 5.70711 1.70711L3.41421 4L15 4C15.5523 4 16 4.44772 16 5C16 5.55228 15.5523 6 15 6L3.41421 6L5.70711 8.29289C6.09763 8.68342 6.09763 9.31658 5.70711 9.70711Z\"\n                          />\n                        </svg>\n                        Return to cart\n                      </a>\n                    </div>\n                  </div>\n                </form>\n              )}\n              {/* Cart Empty */}\n              {cartData && cartData.length === 0 && (\n                <div className=\"flex-col flex gap-5 justify-center items-center min-h-[200px]\">\n                  <svg\n                    stroke=\"currentColor\"\n                    fill=\"none\"\n                    strokeWidth=\"2\"\n                    viewBox=\"0 0 24 24\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    className=\"w-16 h-16 text-gray-400\"\n                    height=\"1em\"\n                    width=\"1em\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <desc></desc>\n                    <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                    <circle cx=\"6\" cy=\"19\" r=\"2\"></circle>\n                    <circle cx=\"17\" cy=\"19\" r=\"2\"></circle>\n                    <path d=\"M17 17h-11v-14h-2\"></path>\n                    <path d=\"M6 5l7.999 .571m5.43 4.43l-.429 2.999h-13\"></path>\n                    <path d=\"M17 3l4 4\"></path>\n                    <path d=\"M21 3l-4 4\"></path>\n                  </svg>\n                  <h3 className=\"text-center text-gray-400 text-xl\">Your cart is currently empty.</h3>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* Checkout Order Summery */}\n        <div id=\"summary\" className=\"2xl:max-w-md lg:w-1/3 w-11/12 mx-auto h-fit\">\n          <div className=\"bg-white sticky top-2 p-6 shadow-md rounded-xl overflow-hidden\">\n            {/* Title */}\n            <h1 className=\"font-semibold text-2xl pb-7\">Order Summary</h1>\n            {/* Order summary */}\n            <div className=\"relative max-h-80 overflow-y-auto mb-10 scrollBar\">\n              {loading && <LoaderGrowing />}\n              {cartData && cartData.length > 0 ? (\n                cartData.map((item, index) => (\n                  <div className=\"mb-7 flex gap-5\" key={index}>\n                    {/* Image here */}\n                    <div className=\"flex-none\">\n                      {item?.featured_image ? (\n                        <Image\n                          src={item.featured_image}\n                          alt=\"Product\"\n                          width={90}\n                          height={90}\n                          className=\"w-full rounded-md object-cover\"\n                          priority\n                          placeholder=\"blur\"\n                          blurDataURL={item.featured_image}\n                        />\n                      ) : (\n                        <div className=\"w-[90px] h-[90px] rounded-md bg-[#F2F4F4] flex items-center justify-center\" />\n                      )}\n                    </div>\n                    {/* Product details */}\n                    <div className=\"flex-initial w-auto mr-1\">\n                      <h3 className=\"line-clamp-2 text-lg text-[#283747] mb-3 leading-5\">\n                        {/* {item.title} */}\n                        {\"Product Name\"}\n                      </h3>\n                      <span className=\"text-[#283747] leading-7\">\n                        {/* {\"$\" + Math.round(item.totals.total).toFixed(2)} */}\n                        {\"$ 100\"}\n                      </span>\n                    </div>\n                  </div>\n                ))\n              ) : (\n                <div className=\"flex justify-center items-center h-14\">\n                  <h1 className=\"text-lg font-medium text-center text-gray-400\">Your cart is empty</h1>\n                </div>\n              )}\n            </div>\n            {/* Discount Coupon input */}\n            <div className=\"flex\">\n              <div className=\"w-full\">\n                <div className=\"relative\">\n                  <label className=\"absolute -top-2 text-[#85929E] left-3 bg-white text-xs\">Discount Coupon</label>\n                  <input\n                    className=\"appearance-none border rounded-l-md w-full py-3.5 px-5 text-gray-700 border-[#DDE6F5] leading-tight focus:outline-none focus:shadow-outline\"\n                    type=\"text\"\n                    placeholder=\"Coupon Code\"\n                  />\n                </div>\n              </div>\n              <button className=\"bg-gradient-to-br from-blueOne to-blueTwo rounded-r duration-500 ease-in-out hover:opacity-80 py-3 px-5 text-base text-white\">\n                Apply\n              </button>\n            </div>\n            {/* information */}\n            <div className=\"mt-5\">\n              <ul>\n                {/* Sub-Total */}\n                <li className=\"flex font-medium justify-between py-2 text-base text-[#5D6D7E]\">\n                  <span>Sub Total</span>\n                  <span className=\"text-[#1B2631]\">\n                    ${summeryData?.subtotal?.toFixed(2) || 0}\n                    {/* <span className=\"text-[#85929E] text-sm\">/year</span> */}\n                  </span>\n                </li>\n                {/* Discount */}\n                <li className=\"flex font-medium justify-between py-2 text-base text-[#5D6D7E]\">\n                  <span>Discount</span>\n                  <span className=\"text-[#FA4F58]\">- ${summeryData?.discount.toFixed(2) || 0}</span>\n                </li>\n                {/* Renewal On */}\n                <li className=\"flex font-medium justify-between py-2 text-base text-[#5D6D7E] border-t-2\">\n                  <span className=\"text-bold\">Total</span>\n                  <span className=\"text-[#1B2631]\">\n                    ${summeryData?.total?.toFixed(2) || 0}\n                    {/* <span className=\"text-[#85929E] text-sm\">/year</span> */}\n                  </span>\n                </li>\n              </ul>\n            </div>\n            {/* checkboxs */}\n            <div className=\"mt-8\">\n              {/* tracking-coupone checkbox */}\n              {policyData && (\n                <Fragment>\n                  <div className=\"mb-5\">\n                    <div className=\"flex justify-between items-center\">\n                      <div className=\"flex items-center gap-2 justify-between\">\n                        <input id=\"Coupons\" type=\"checkbox\" defaultChecked />\n                        <label htmlFor=\"Coupons\" className=\"font-normal text-sm text-themeNevyLight\">\n                          {policyData.title || \"Text me Tracking Updates  & Periodic Coupons (optional)\"}\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"mb-4\">\n                    <p className=\"font-normal text-sm text-themeNevyLight\">\n                      {policyData.description ||\n                        \"Your personal data will be used to process your order, support your experience throughout this website, and for other purpose describe in our\"}\n                      <a\n                        href={policyData.link.url || \"#\"}\n                        target={policyData.link.target || \"_self\"}\n                        rel=\"noopener noreferrer\"\n                        className=\"font-semibold text-themeNevyLight hover:text-themeRedLight transition hover:duration-300\"\n                      >\n                        {\" \"}\n                        {policyData.link.title || \"privacy policy\"}\n                      </a>\n                    </p>\n                  </div>\n                </Fragment>\n              )}\n              {/* newsletter checkbox */}\n              {signUpData && (\n                <div className=\"mb-4\">\n                  <div className=\"flex justify-between items-center\">\n                    <div className=\"flex gap-1 items-center justify-between\">\n                      <input id=\"subscription\" type=\"checkbox\" defaultChecked />\n                      <label htmlFor=\"subscription\" className=\"ml-1 font-normal text-sm text-themeNevyLight\">\n                        {signUpData.title || \"Sign me up to receive emil updates and news (optional)\"}\n                      </label>\n                    </div>\n                  </div>\n                </div>\n              )}\n              {/* aggreement checkbox */}\n              {companyPolicyData && (\n                <div className=\"mb-4\">\n                  <div className=\"flex justify-between items-center\">\n                    <div className=\"flex gap-1 items-center justify-between\">\n                      <input id=\"policy\" type=\"checkbox\" defaultChecked />\n                      <label htmlFor=\"policy\" className=\"ml-1 font-normal text-sm text-themeNevyLight\">\n                        {companyPolicyData.title || \"I agree with the\"}\n                        <a\n                          href={companyPolicyData.link.url || \"#\"}\n                          target={companyPolicyData.link.target || \"_self\"}\n                          rel=\"noopener noreferrer\"\n                          className=\"font-semibold text-themeRedLight hover:text-themeDark transition hover:duration-300\"\n                        >\n                          {\" \"}\n                          {companyPolicyData.companyName || \"Company Name Policies\"}\n                        </a>\n                      </label>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { Fragment } from \"react\";\n\nexport const Loader = ({ bg }: { bg?: string }) => {\n  return (\n    <Fragment>\n      <div id=\"preloader\" className={bg ? bg : `bg-white`}>\n        <div className={`sk-three-bounce ${bg ? bg : `bg-white`}`}>\n          <div className=\"sk-child sk-bounce1\"></div>\n          <div className=\"sk-child sk-bounce2\"></div>\n          <div className=\"sk-child sk-bounce3\"></div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport const LoaderGrowing = () => {\n  const itemLength = [\"1\", \"2\", \"3\", \"4\", \"5\"];\n  return (\n    <Fragment>\n      <div className=\"absolute inset-0 z-40 flex items-center justify-center bg-[#ffffffd0]\">\n        <div className={`lds-ring`} aria-labelledby=\"none\">\n          {itemLength.map((item, index) => (\n            <div key={index} />\n          ))}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport const FormLoader = ({ color }: { color?: string }) => {\n  return (\n    <Fragment>\n      <svg\n        className={`ml-2 h-5 w-5 animate-spin ${color ? color : \"text-blueTwo\"}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n      >\n        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n        <path\n          className=\"opacity-75\"\n          fill=\"currentColor\"\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        />\n      </svg>\n    </Fragment>\n  );\n};\n"],"mappings":"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","names":["import_react","import_jsx_runtime","React","Image"]}